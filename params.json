{"name":"GitHub-tutorial","tagline":"Let's Git Started","body":"# GitHub Tutorial\r\n\r\n_by Luis Marin_\r\n\r\n---\r\n## Git vs. GitHub\r\n__Git:__ Git is version control\r\n \r\n\r\n__Github__:  Github stores your code in a cloud,in which you can   `pull` from any computer and `push` back to github so it can save your `commit`.  \r\nIt also allows for easy collaboration with other users, they can *fork* your repo and make their own changes and you can either accept or deny their pull requests, to accept or deny their changes to your repo.  \r\n\r\n \r\n\r\n---\r\n## Initial Setup:\r\n####_Github Account_:  \r\n1.Create a [github](https://github.com) account to make your repositories and your remotes.  \r\n2.Once you create your github account you go to \"Your Profile\" and click on the repositories tab.  \r\n3.Once in the repositories tab, click on \"New\" and type in the name for the repository and then you can begin!\r\n4. Endless Fun!\r\n\r\n####_First steps:_  \r\n1. Create a repository on github  \r\n2. Then in any porgram on the command line type in `git init`  \r\n3. Afterwards, type in `git config`  \r\n4. It will show you a lists of commands in which you will type in `user.name(email) --global [insert name or email]`  \r\n5. Then type in `git push -u [insert SSH/HTTPS url]` connect your computer to your repository on github then afterwards type in `git push` to send any commits back to your repository on github.  \r\n6. Once that is complete you must confirm that the program you are using is connected to the repository on github to `push` your changes back into the repository.\r\n\r\n\r\n\r\n\r\n---\r\n## Repository Setup\r\n\r\n1.Make sure you are logged in on github.  \r\n2.Click on your profile.  \r\n3. Click \"Your Profile\"   \r\n4. Create a new one or continue from an old one  \r\n5. connect your program to the repository on github (you can use `git clone url` and/or `git push - u url`)  \r\n6. once that is done you can add any file change and make commits then type in `git push` to send the changes back to your repository on github.  \r\n\r\n\r\n\r\n---\r\n## Workflow & Commands\r\n1. To initialize, or start up, git type in `git init`.   \r\n2. To add said changed files to the \"stage\" type in `git add file name` or, for multiple files, `git add .`  \r\n3. You must constantly check what changes you have done or where you are so typing `git status` repeatdly is helpful.  \r\n4. To make a commit to save the changes to your files type in `git commit -m \"present tense change word and url\"` example: `git commit -m \"add example\"`\r\n5. By now You may realize that how your repository on github doesn't look like the preview in the program you're using. For that you must use the _SSH_ url of your repository on github, copy the url and type in `git push url` to connect your github to your workspace. That way you can just type in `git push` to \"push\" your changes from the workspace to the repository.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}